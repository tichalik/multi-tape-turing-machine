/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pl.polsl.tomasz.michalik.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import pl.polsl.tomasz.michalik.model.Tape;

/**
 *
 * @author huawei
 */
public class GUI extends javax.swing.JFrame {

    private String currentState;
    private ArrayList<Tape> tapes;
    private String blank;
    private int numberOfTapes;
    private int numberOfStates;
    private TapeTableModel tapeTableModel;

    /**
     * applies changes in mumber of tapes to the model
     *
     * @param newNumberOfTapes new number of tapes
     */
    private void updateNumberOfTapes(int newNumberOfTapes) {
        numberOfTapes = newNumberOfTapes;
        
        
    }
    /**
     * applies changes in mumber of states to the model
     * 
     * @param newNumberOfStates  new number of states
     */
    private void updateNumberOfStates(int newNumberOfStates){
        numberOfStates = newNumberOfStates;
        
        
    }
    
    /**
     * applies change of blank symbol to the model
     * 
     * @param newBlank new blank symbol
     */
    private void updateBlank(String newBlank){
        blank = newBlank;
        
        
    }

    /**
     * shows tapes of the turing machine
     *
     * @param newTapes tapes of the turing machine
     */
    public void showTapes(ArrayList<Tape> newTapes) {
        tapes = newTapes;
        tapeTableModel.updateTapes(tapes);
    }

    /**
     * shows current state
     *
     * @param state state of the turing machine
     */
    public void showCurrentState(String state) {
        lCurrentState.setText(state);
    }

    public void setBlank(String newBlank) {
        blank = newBlank;
        tapeTableModel.updateBlank(newBlank);
    }

    /**
     * Creates new form GUI
     */
    public GUI() {
        currentState = "undefined";
        numberOfTapes = 0;
        numberOfStates = 0;
        blank = "undefined";
        tapes = new ArrayList<>();
        tapeTableModel = new TapeTableModel();

        initComponents();
        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lBlankSymbol = new javax.swing.JLabel();
        tfBlankSymbol = new javax.swing.JTextField();
        lNumberOfTapes = new javax.swing.JLabel();
        sNumberOfTapes = new javax.swing.JSpinner();
        lNumberOfStates = new javax.swing.JLabel();
        sNumberOfStates = new javax.swing.JSpinner();
        bApplyChanges = new javax.swing.JButton();
        lTmpResults = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tapeTable = new javax.swing.JTable();
        lStaticCurrentState = new javax.swing.JLabel();
        lCurrentState = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lBlankSymbol.setText("blank symbol:");

        tfBlankSymbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBlankSymbolActionPerformed(evt);
            }
        });

        lNumberOfTapes.setText("number of tapes");

        sNumberOfTapes.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        lNumberOfStates.setText("number of states");

        sNumberOfStates.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        bApplyChanges.setText("apply changes");
        bApplyChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bApplyChangesActionPerformed(evt);
            }
        });

        lTmpResults.setText("chosen results: ");
        lTmpResults.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        tapeTable.setModel(tapeTableModel);
        jScrollPane1.setViewportView(tapeTable);

        lStaticCurrentState.setText("current state:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lBlankSymbol)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfBlankSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lNumberOfTapes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sNumberOfTapes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lNumberOfStates)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sNumberOfStates, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(bApplyChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(107, 107, 107)
                                    .addComponent(lStaticCurrentState, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lCurrentState, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addComponent(lTmpResults, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lBlankSymbol)
                    .addComponent(tfBlankSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNumberOfStates)
                    .addComponent(sNumberOfStates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNumberOfTapes)
                    .addComponent(sNumberOfTapes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bApplyChanges))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lTmpResults, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lStaticCurrentState)
                    .addComponent(lCurrentState))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfBlankSymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBlankSymbolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBlankSymbolActionPerformed

    private void bApplyChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bApplyChangesActionPerformed
        String newBlank = tfBlankSymbol.getText();
        int newNumberOfTapes = Integer.parseInt(sNumberOfTapes.getValue().toString());
        int newNumberOfStates = Integer.parseInt(sNumberOfStates.getValue().toString());

        if (newBlank.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "no value"
                    + " for blank has been entered", "error", HEIGHT);
        } else {
            lTmpResults.setText("no tapes: " + newNumberOfTapes
                    + " no states: " + newNumberOfStates + " blank: " + newBlank);

            updateBlank(newBlank);
            updateNumberOfStates(newNumberOfStates);
            updateNumberOfTapes(newNumberOfTapes);
        }


    }//GEN-LAST:event_bApplyChangesActionPerformed

    /**
     * starts the GUI.
     */
    public void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        this.setVisible(true);
        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bApplyChanges;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lBlankSymbol;
    private javax.swing.JLabel lCurrentState;
    private javax.swing.JLabel lNumberOfStates;
    private javax.swing.JLabel lNumberOfTapes;
    private javax.swing.JLabel lStaticCurrentState;
    private javax.swing.JLabel lTmpResults;
    private javax.swing.JSpinner sNumberOfStates;
    private javax.swing.JSpinner sNumberOfTapes;
    private javax.swing.JTable tapeTable;
    private javax.swing.JTextField tfBlankSymbol;
    // End of variables declaration//GEN-END:variables
}
